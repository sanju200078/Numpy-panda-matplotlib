# 1. Import libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# 2. Load datasets
train_df = pd.read_csv("train.csv")
test_df = pd.read_csv("test.csv")

# 3. Quick look at data
print("Train shape:", train_df.shape)
print("Test shape:", test_df.shape)
print("\nTrain columns:", train_df.columns.tolist())
print("\nMissing values in train:\n", train_df.isnull().sum())
print("\nMissing values in test:\n", test_df.isnull().sum())

# 4. Describe numeric columns
print("\nNumeric Summary:\n", train_df.describe())

# 5. Example: Compare a numeric column between train and test
numeric_cols = train_df.select_dtypes(include='number').columns
if len(numeric_cols) > 0:
    col = numeric_cols[0]  # pick first numeric column
    plt.figure(figsize=(8,5))
    sns.histplot(train_df[col], kde=True, color='blue', label='Train')
    sns.histplot(test_df[col], kde=True, color='orange', label='Test')
    plt.legend()
    plt.title(f"Distribution of {col} in Train vs Test")
    plt.show()

# 6. Example: Correlation heatmap for train dataset
if len(numeric_cols) > 1:
    plt.figure(figsize=(10,6))
    sns.heatmap(train_df[numeric_cols].corr(), annot=True, cmap='coolwarm')
    plt.title("Correlation Heatmap (Train Data)")
    plt.show()
------------------------------------------
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Step 1: Load CSV (auto header detection)
file_path = "/content/test.csv"  # change to train.csv or your path

# Try reading with header
df = pd.read_csv(file_path)

# Step 2: If no meaningful column names, assign defaults
if all(str(col).startswith("Unnamed") for col in df.columns):
    # No header â†’ read again and set names
    df = pd.read_csv(file_path, header=None)
    # Assign proper names (modify according to your dataset)
    df.columns = ["SepalLength", "SepalWidth", "PetalLength", "PetalWidth", "Species"]

# Step 3: Check the column names
print("Column names:", df.columns.tolist())
print(df.head())

# Step 4: Scatter plot
plt.figure(figsize=(8, 6))
sns.scatterplot(
    data=df,
    x="SepalLength",
    y="PetalLength",
    hue="Species",
    palette="Set2",
    s=80,
    edgecolor="black"
)
plt.title("Sepal Length vs Petal Length")
plt.show()
------------------------------------------
figsize=(8,6) to give more breathing room.

palette='Set2' for better color contrast.

s=80 and edgecolor='black' to make points stand out.

Added title, improved axis labels.

Removed redundant legend text.

tight_layout() to fix label overlaps.
